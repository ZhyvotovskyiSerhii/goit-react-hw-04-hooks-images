{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/imagesApi.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","id","webformatURL","largeImageURL","tags","src","alt","data-url","ImageGallery","images","onClick","map","Button","axios","defaults","baseURL","searchQuery","currentPage","get","then","response","data","hits","modalEl","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","props","createPortal","currentTarget","App","setImages","isLoaded","setIsLoaded","url","tag","modalImg","setModalImg","isModalVisible","setIsModalVisible","setSearchQuery","searchPage","setSearchPage","error","setError","fetchImages","scrollTo","top","documentElement","scrollHeight","behavior","imagesApi","catch","finally","toggleModal","message","nodeName","largeUrl","dataset","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.843bfc40.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Searchbar.css\";\nimport PropTypes from \"prop-types\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import \"./ImageGalleryItem.css\"\nimport PropTypes from \"prop-types\"\n\nconst ImageGalleryItem = ({\n  id,\n  webformatURL,\n  largeImageURL,\n  tags,\n}) => (\n  <li key={id} className=\"ImageGalleryItem\">\n    <img\n      src={webformatURL}\n      alt={tags}\n      data-url={largeImageURL}\n      className=\"ImageGalleryItem-image\"\n    />\n  </li>\n)\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n}\n\nexport default ImageGalleryItem\n","import \"./ImageGallery.css\"\nimport ImageGalleryItem from \"../ImageGalleryItem\"\nimport PropTypes from \"prop-types\"\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className=\"ImageGallery\" onClick={onClick}>\n    {images.map(\n      ({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n        />\n      )\n    )}\n  </ul>\n)\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default ImageGallery\n","import \"./Button.css\"\nimport PropTypes from \"prop-types\"\n\nconst Button = ({ onClick }) => (\n  <button className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n)\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import axios from \"axios\"\n\nconst apiKey = \"23396378-fed243cf5b1bf6c558340d468\"\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\"\n\nconst fetchData = ({\n  searchQuery = \"\",\n  currentPage = 1,\n}) => {\n  return axios\n    .get(\n      `/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits)\n}\n\nexport default { fetchData }\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Modal.css\";\n\nconst modalEl = document.querySelector(\"#modal\");\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeydown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeydown);\n    };\n  }, []);\n\n  const handleKeydown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalEl\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport imagesApi from \"./services/imagesApi\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [modalImg, setModalImg] = useState({ url: null, tag: null });\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchPage, setSearchPage] = useState(1);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchImages().then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      });\n    }\n  }, [searchQuery]);\n\n  const onChangeQuery = (query) => {\n    setImages([]);\n    setError(null);\n    setSearchQuery(query);\n    setSearchPage(1);\n  };\n\n  const fetchImages = () => {\n    setIsLoaded(true);\n    return imagesApi\n      .fetchData({\n        searchQuery,\n        currentPage: searchPage,\n      })\n      .then((hits) => {\n        setImages([...images, ...hits]);\n        setSearchPage(searchPage + 1);\n      })\n      .catch((error) => setError(error))\n      .finally(() => setIsLoaded(false));\n  };\n\n  const toggleModal = () => {\n    setIsModalVisible(!isModalVisible);\n  };\n\n  const onImageClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n\n    setModalImg({\n      largeUrl: e.target.dataset.url,\n      tags: e.target.alt,\n    });\n    toggleModal();\n  };\n  return (\n    <div className=\"container\">\n      <Searchbar onSubmit={onChangeQuery} />\n\n      {error && (\n        <h2>\n          Sorry something went wrong, try again later!(\n          {error.message})\n        </h2>\n      )}\n\n      <ImageGallery images={images} onClick={onImageClick} />\n\n      {isLoaded && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"blue\"\n          height={80}\n          width={100}\n          timeout={4000}\n        />\n      )}\n\n      {images.length > 0 && !isLoaded && <Button onClick={fetchImages} />}\n\n      {isModalVisible && (\n        <Modal onClose={toggleModal}>\n          <img src={modalImg.largeUrl} alt={modalImg.tag} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}